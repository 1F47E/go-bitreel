__________          __        __________              .__   
\______   \___.__._/  |_  ____\______   \ ____   ____ |  |  
 |    |  _<   |  |\   __\/ __ \|       _// __ \_/ __ \|  |  
 |    |   \\___  | |  | \  ___/|    |   \  ___/\  ___/|  |__
 |______  // ____| |__|  \___  >____|_  /\___  >\___  >____/
        \/ \/                \/       \/     \/     \/


ByteReel transforms any file to a video file.
Then you can upload it to video hosting and have tape storage like in good old days.

How it works

Encoding file to a video is done by representing every bit as a black (1) or white (0) 2x2 pixels square.
Due to this process, the resulting video will be approximately 4 times the size of your original file
A checksum for each frame is calculated and incorporated as metadata, ensuring the integrity of your data.
The final step involves encoding these frames into a video using ffmpeg

Dependencies:

- ffmpeg



TODO

- [x] encode file to frames
- [x] decode file from frames
- [x] save original filename
- [x] add metadata to every frame at the top
- [x] add checksum to frames at the end
- [x] detect end of the file
- [x] add bit rot protection - counting dominant pixels in a square
- [x] run ffmpeg from the code
- [x] generate video
- [x] decode video
- [x] check checksum on decode
- [x] add workers, limit to cpu cores
- [ ] add encryption
- [ ] error correction (ECC) like reed-solomon


DEV NOTES
encode images to video with image convert to yuv422p10
ffmpeg -framerate 30 -i out_%d.png -c:v prores -profile:v 3 -pix_fmt yuv422p10 output.mov

decode video to images
ffmpeg -i tmp/out/output.mov tmp/out/decompressed/output_%08d.png
